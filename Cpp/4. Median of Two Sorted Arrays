class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int len1 = nums1.size();
        int len2 = nums2.size();
        int k1=(len1+len2-1)/2,k2=(len1+len2)/2;
        int i=0,j=0,m1,m2,k=0,f1=0,f2=0;
        while(i<len1&&j<len2)
        {
            if(nums1[i]<=nums2[j])
            {
                if(k==k1&&!f1)
                {
                    m1=nums1[i];
                    f1=1;
                }
                if(k==k2&&!f2)
                {
                    m2=nums1[i];
                    f2=1;
                }
                i++;
            }else
            {
                if(k==k1&&!f1)
                {
                    m1=nums2[j];
                    f1=1;
                }
                if(k==k2&&!f2)
                {
                    m2=nums2[j];
                    f2=1;
                }
                j++;
            }
            if(f1&&f2)break;
            k++;
        }
        if(i<len1)
        {
            if(f1==0)m1=nums1[i+k1-k];
            if(f2==0)m2=nums1[i+k2-k];
        }
        if(j<len2)
        {
            if(f1==0)m1=nums2[j+k1-k];
            if(f2==0)m2=nums2[j+k2-k];
        }
        return (m1+m2)*1.0/2;
    }
};
